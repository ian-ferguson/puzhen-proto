/*
<div class="pz_card__toggle">
          <div class="pz_card__toggle-header">
            <label class="pz_card__toggle-header-switch">
                <input type="checkbox" id="header-switch" class="header-switch">
                <div class="header-switch-wrapper">
                    <span class="header-switch-text"><span>Monthly</span><span>Annual</span></span> 
                </div>  
            </label>
          </div>
          <div class="pz_card_toggle-options">
            <div class="pz_card__toggle-option">
              <h2>Option 1</h2>
              <p>A monthly subscription option</p>
              <ul class="list-bullets">
                <li>Highlight 1</li>
                <li>Highlight 2</li>
                <li>Highlight 3</li>
              </ul>
            </div>
            <div class="pz_card__toggle-option">
                <h2>Option 2</h2>
                <p>A yearly subscription option</p>
                <ul class="list-bullets">
                  <li>Highlight 1</li>
                  <li>Highlight 2</li>
                  <li>Highlight 3</li>
                </ul>
             </div>
          </div>
        </div>
*/

@import './mixins';

.pz_card__toggle {
  border: 1px solid var(--offwhite);
  border-radius: var(--radius-base);
  width: clamp(20rem, 50%, 30rem);
}

.pz_card__toggle-header {
  border-bottom: 1px solid var(--offwhite);
}

label:has(input[type='checkbox']).pz_card__toggle-header-switch {
  width: 100%;
  position: relative;
  display: block;
  padding: 0;
}

input[type='checkbox'].header-switch {
  display: none;
}

.header-switch-wrapper {
  width: 100%;
}

.header-switch-wrapper::before {
  content: '';
  display: block;
  width: 50%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  background-color: var(--offwhite);
  transform: translateX(0);
  will-change: transform;
  transition: transform 0.5s ease-in;
}

input[type='checkbox'].header-switch:checked + .header-switch-wrapper::before {
  transform: translateX(100%);
  transition: transform 0.5s ease-in;
}

input[type='checkbox'].header-switch::before {
  display: none;
}

.header-switch {
}

.header-switch-wrapper {
}

.header-switch-text {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr;
  place-content: center;

  span {
    display: flex;
    width: 100%;
    height: 100%;
    justify-content: center;
    align-items: center;
    padding: var(--padding-m);
    will-change: color;
    transition: color 0.5s ease;
  }
}

.header-switch-text span:nth-of-type(1) {
  color: var(--black);
}

.header-switch:checked
  + .header-switch-wrapper
  .header-switch-text
  span:nth-of-type(1) {
  color: var(--pz__text-color-primary);
}

.header-switch-text span:nth-of-type(2) {
  color: var(--pz__text-color-primary);
}

.header-switch:checked
  + .header-switch-wrapper
  .header-switch-text
  span:nth-of-type(2) {
  color: var(--black);
}

.pz_card__toggle-option {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: var(--padding-l);
  text-align: center;
  gap: var(--padding-m);
  will-change: transform, opacity;
  transition:
    transform 0.5s ease,
    opacity 0.45s ease;
}

.pz_card__toggle-options .pz_card__toggle-option:nth-of-type(1) {
  opacity: 1;
  transform: translateX(0);
  display: flex;
}

.pz_card__toggle-options .pz_card__toggle-option:nth-of-type(2) {
  opacity: 0;
  transform: translateX(-1rem);
  display: none;
}

.pz_card__toggle-header:has(.header-switch:checked)
  + .pz_card__toggle-options
  .pz_card__toggle-option:nth-of-type(1) {
  opacity: 0;
  transform: translateX(-1rem);
  display: none;
}

.pz_card__toggle-header:has(.header-switch:checked)
  + .pz_card__toggle-options
  .pz_card__toggle-option:nth-of-type(2) {
  opacity: 1;
  transform: translateX(0);
  display: flex;
}

@include media-portrait {
  .pz_card__toggle {
    width: 100%;
    max-width: 100%;
  }
}
